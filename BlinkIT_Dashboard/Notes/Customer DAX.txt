---------Total customer count
 	1 - In Curr_Yr
 	2 - In Prev_Yr

----------Total Customer Sale
 	1 - In Curr_Year
	2 - In Prev_Year

---------New Customer count by period
	1 - Last 6 months of curr_yr
	2 - Last 6 months of prev_yr

---------New Customer Sale campare period 1 - 2
	Last 6 months of curr_ye and Prev_yr

---------Lost customer count by period 
	last 6 months of curr_yr and prev_yr

-----------Lost customer sale by period 
	Last 6 month of curr_yr and prev_yr

----------Repeated customer in year 2023 2024
	customers who order more than 2 times = count
	customers who order more than 3 times  = sale


-----------------Calender

Calendar = ADDCOLUMNS(
    CALENDAR(
        DATE([Pre_Year], 1, 1),
        DATE([Curr_Year], [Curr_Month], DAY(EOMONTH(DATE([Curr_Year], [Curr_Month], 1), 0))) -- End date
    ),
    "Year", YEAR([Date]),
    "Month", FORMAT([Date], "mmm"),
    "Month-Yr", FORMAT([Date], "mmm-yy"),
    "Day", FORMAT([Date], "ddd"),
    "MonthIndex", MONTH([Date]),
    "Quarter", "Q" & QUARTER([Date])
)



--------------------------------------Table Name  : Customer_Measures = 

	Total_Customer_Count = DISTINCTCOUNT(Master_Table[customer_id])

	YTD_Customer_Count = var YTDSysMonth = [YTDMonth] 
		RETURN
		CALCULATE([Total_Customer_Count],'Calendar'[MonthIndex]<=YTDSysMonth)

	Period_Customers = 
		var selected_Period = [Selected_Period]
		var Period_Value = CALCULATE([Total_Customer_Count],'Calendar'[MonthIndex]<=selected_Period)
		RETURN if(selected_Period=0,[YTD_Customer_Count],Period_Value)

	Period_Customers_CY = 
		var cy = [Curr_Year]
		RETURN
		CALCULATE([Period_Customers],'Calendar'[Year]=cy)

	Period_Customers_PY = 
		var py = [Pre_Year]
		RETURN
		CALCULATE([Period_Customers],'Calendar'[Year]=py)

	New_Customers = 
		var filtercustomers = FILTER(
		    SUMMARIZE(Master_Table,Master_Table[customer_id]),
		    [Previous_Year_Value]<=0 && [Current_Year_Value]>0
		)
		RETURN CALCULATE([Period_Customers],filtercustomers)

	Lost_Customers = 
		var filtercustomers = FILTER(
		    SUMMARIZE(Master_Table,Master_Table[customer_id]),
		    [Previous_Year_Value]>0 && [Current_Year_Value]<=0
		)
		RETURN CALCULATE([Period_Customers],filtercustomers)	

	Lost_Customers_Sale = 
		var filtercustomers = FILTER(
	   	 SUMMARIZE(Master_Table,Master_Table[customer_id]),
	    	[Previous_Year_Value]>0 && [Current_Year_Value]<=0
		)
		RETURN CALCULATE([Period_Value],filtercustomers)

	New_Customers_Sale = 
		var filtercustomers = FILTER(
		    SUMMARIZE(Master_Table,Master_Table[customer_id]),
		    [Previous_Year_Value]<=0 && [Current_Year_Value]>0
		)
	RETURN CALCULATE([Period_Value],filtercustomers)

	TopN_Customer_by_Value = 
		var Rankvalue =  RANKX(ALL(Master_Table[customer_name]),[Period_Value],,DESC)
		var _rank = SELECTEDVALUE(Rank_Table[Value])
		var rank_topN_Value =  IF(Rankvalue<=_rank,[Period_Value],BLANK())
		RETURN IF(_rank = 0,[Period_Value],rank_topN_Value)

	Product_Rank_Title = SELECTEDVALUE(Rank_Table[Option])&" Customers "& [Selected_Sale_or_Quantity]

	Customer_Growth = 
		var custcy = [Period_Customers_CY]
		var custpy = [Period_Customers_PY]
		RETURN DIVIDE(custcy-custpy,custpy)

	Order_ID_Count = DISTINCTCOUNT(Master_Table[order_id])

	Period_Orders = 
		var selected_Period = [Selected_Period]
		var Period_Value = CALCULATE([Order_ID_Count],'Calendar'[MonthIndex]<=selected_Period)
		RETURN if(selected_Period=0,[YTD_orders],Period_Value)

	YTD_Orders = var YTDSysMonth = [YTDMonth] 
		RETURN
		CALCULATE([Order_ID_Count],'Calendar'[MonthIndex]<=YTDSysMonth)

	Repeat_Customers = 
			var customerdata = SUMMARIZE(Master_Table, Master_Table[customer_id])
			var filterobj = FILTER(customerdata,[Period_Orders]>=2)
			RETURN CALCULATE([Period_Customers],filterobj)

	Repeate_Customers_Count_CY = 
		var cy = [Curr_Year]
		RETURN  CALCULATE([Repeat_Customers],'Calendar'[Year]=cy)

	Repeate_Customers_Count_PY = 
		var py = [Pre_Year]
		RETURN  CALCULATE([Repeat_Customers],'Calendar'[Year]=py)

	Repeat_Customers_Sale = 
			var customerdata = SUMMARIZE(Master_Table, Master_Table[customer_id])
			var filterobj = FILTER(customerdata,[Period_Orders]>=2)
			RETURN CALCULATE([Period_Value],filterobj)

	Repeate_Customers_Sale_CY = 
		var cy = [Curr_Year]
		RETURN  CALCULATE([Repeat_Customers_Sale],'Calendar'[Year]=cy)

	Repeate_Customers_Sale_PY = 
		var py = [Pre_Year]
		RETURN  CALCULATE([Repeat_Customers_Sale],'Calendar'[Year]=py)

	Order_Filter_Table = GENERATESERIES(0,10,1)

	Repeat_Customers_Dynamic = 
			var order_count = MAX(Order_Filter_Table[Order_Filter_Table])
			var customerdata = SUMMARIZE(Master_Table, Master_Table[customer_id])
			var filterobj = FILTER(customerdata,[Period_Orders]>=order_count)
			var val = CALCULATE([Period_Customers],filterobj)
			RETURN if(ISBLANK(val),0,val)

	Order_Count_Label = "Customer Who Order More Than "&(Order_Filter_Table[Order_Filter_Table Value] )&" Times"